{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","helpers/getFilteredTodos.tsx","helpers/getVisibleTodos.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialState","All","filterReducer","todos","todosReducer","filter","id","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","dispatch","length","className","map","title","completed","isSelected","onClick","currentTodoActions","handleClick","TodoFilter","handleQuery","value","filterActions","onSubmit","event","preventDefault","onChange","target","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","isLoading","setIsLoading","user","setUser","useEffect","userId","receivedUser","catch","Error","href","email","name","App","receivedTodos","TodosActions","filteredTodos","getfilteredTodos","visibleTodos","toLowerCase","trim","includes","getVisibleTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a842b14.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype AddQueryAction = {\n  type: 'filter/setQuery',\n  payload: string,\n};\n\ntype AddStatusAction = {\n  type: 'filter/setStatus',\n  payload: string,\n};\n\nconst setStatus = (status: string): AddStatusAction => ({\n  type: 'filter/setStatus',\n  payload: status,\n});\n\nconst setQuery = (query: string): AddQueryAction => ({\n  type: 'filter/setQuery',\n  payload: query,\n});\n\nexport const actions = { setQuery, setStatus };\n\ntype Action = AddStatusAction | AddQueryAction;\n\nexport type State = {\n  query: string,\n  status: string,\n};\n\nconst initialState = {\n  query: '',\n  status: Status.All,\n};\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/setQuery':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filter/setStatus':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetAction = {\n  type: 'todo/SET',\n  payload: Todo[],\n};\n\ntype AddAction = {\n  type: 'todo/ADD',\n  payload: Todo,\n};\n\ntype DeleteAction = {\n  type: 'todo/DELETE'\n  payload: Todo,\n};\n\nconst set = (todos: Todo[]): SetAction => ({\n  type: 'todo/SET',\n  payload: todos,\n});\n\nconst add = (todo: Todo): AddAction => ({\n  type: 'todo/ADD',\n  payload: todo,\n});\n\nconst del = (todo: Todo): DeleteAction => ({\n  type: 'todo/DELETE',\n  payload: todo,\n});\n\ntype Action = DeleteAction | SetAction | AddAction;\ntype State = Todo[];\n\nexport const actions = { set, add, del };\n\nconst todosReducer = (state: State = [], action: Action): State => {\n  switch (action.type) {\n    case 'todo/SET':\n      return [...action.payload];\n\n    case 'todo/DELETE':\n      return state\n        .filter(todo => todo.id !== action.payload.id);\n\n    case 'todo/ADD':\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype PropTypes = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<PropTypes> = ({ todos }) => {\n  const dispatch = useDispatch();\n\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const handleClick = (todo: Todo) => {\n    dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  if (!todos.length) {\n    return (\n      <p className=\"notification is-warning\">\n        There are no todos matching current filter criteria\n      </p>\n    );\n  }\n\n  return (\n    <div>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(todo => {\n            const { id, title, completed } = todo;\n            const isSelected = currentTodo?.id === todo.id;\n\n            return (\n              <tr data-cy=\"todo\" key={id}>\n                <td className=\"is-vcentered\">{id}</td>\n                <td className=\"is-vcentered\"> </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={\n                    completed\n                      ? 'has-text-success'\n                      : 'has-text-danger'\n                  }\n                  >\n                    {title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => handleClick(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={\n                          isSelected\n                            ? 'far fa-eye-slash'\n                            : 'far fa-eye'\n                        }\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const handleQuery = (value: string) => {\n    dispatch(filterActions.setQuery(value));\n  };\n\n  const handleStatus = (value: string) => {\n    dispatch(filterActions.setStatus(value));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={status}\n            onChange={({ target }) => handleStatus(target.value)}\n            data-cy=\"statusSelect\"\n          >\n            <option value={Status.All}>All</option>\n            <option value={Status.Active}>Active</option>\n            <option value={Status.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={({ target }) => handleQuery(target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => handleQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n// import { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  const dispatch = useDispatch();\n  const todo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (todo) {\n      getUser(todo.userId)\n        .then(receivedUser => {\n          setUser(receivedUser);\n          setIsLoading(false);\n        })\n        .catch(() => {\n          throw new Error('123');\n        });\n    }\n  }, []);\n\n  const handleClick = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => handleClick()}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{todo?.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo?.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)}\n                {' by '}\n                <a href={`mailto:${user?.email}`}>{user?.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { actions as TodosActions } from './features/todos';\nimport { getTodos } from './api';\nimport { useAppSelector } from './app/hooks';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { getfilteredTodos } from './helpers/getFilteredTodos';\nimport { getVisibleTodos } from './helpers/getVisibleTodos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(receivedTodos => {\n        dispatch(TodosActions.set(receivedTodos));\n        setIsLoading(false);\n      })\n      .catch(() => {\n        throw new Error('123');\n      });\n  }, []);\n\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const filteredTodos = getfilteredTodos(todos, status);\n\n  const visibleTodos = getVisibleTodos(filteredTodos, query);\n\n  if (isLoading) {\n    return (\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <Loader />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">{`Todos: ${visibleTodos.length}`}</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              <TodoList todos={visibleTodos} />\n            </div>\n            {currentTodo && <TodoModal />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport const getfilteredTodos = (todos: Todo[], filter: string) => (\n  todos.filter(({ completed }) => {\n    switch (filter) {\n      case Status.All:\n        return true;\n\n      case Status.Active:\n        return !completed;\n\n      case Status.Completed:\n        return completed;\n\n      default:\n        return 0;\n    }\n  })\n);\n","import { Todo } from '../types/Todo';\n\nexport const getVisibleTodos = (\n  todos: Todo[],\n  query: string,\n) => todos.filter(({ title }) => (\n  title.toLowerCase().trim().includes(query.trim())\n));\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}